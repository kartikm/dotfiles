servers = (
  {
    address = "irc.oftc.net";
    chatnet = "OFTC";
    port = "6667";
    autoconnect = "yes";
  },
  {
    address = "irc.freenode.net";
    chatnet = "Freenode";
    port = "6667";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "yes";
  }
);

chatnets = {
  OFTC = {
    type = "IRC";
    max_kicks = "5";
    max_msgs = "5";
    max_whois = "5";
    max_query_chans = "5";
    autosendcmd = "/^msg NickServ identify SOMEPASSWORD";
  };
  Freenode = {
    type = "IRC";
    max_kicks = "5";
    max_msgs = "5";
    max_whois = "5";
    max_query_chans = "5";
    autosendcmd = "/^msg NickServ identify SOMEPASSWORD";
  };
};

channels = (
  { name = "#debian-in"; chatnet = "OFTC"; autojoin = "Yes"; },
  { name = "#debian-in-mentors"; chatnet = "OFTC"; autojoin = "Yes"; },
  { name = "#debian-boot"; chatnet = "OFTC"; autojoin = "No"; },
  { name = "#debian-devel"; chatnet = "OFTC"; autojoin = "Yes"; },
  { name = "#debian-mentors"; chatnet = "OFTC"; autojoin = "Yes"; },
  { name = "#debian-i18n"; chatnet = "OFTC"; autojoin = "No"; },
  { name = "#debian"; chatnet = "OFTC"; autojoin = "Yes"; },
  { name = "#debconf"; chatnet = "OFTC"; autojoin = "No"; },
  { name = "#debian-newmaint"; chatnet = "OFTC"; autojoin = "No"; },
  { name = "#debian-nginx"; chatnet = "OFTC"; autojoin = "Yes"; },
  { name = "#tor-dev"; chatnet = "OFTC"; autojoin = "Yes"; },
  { name = "#indlinux"; chatnet = "Freenode"; autojoin = "No"; },
  { name = "##linux-india"; chatnet = "Freenode"; autojoin = "Yes"; },
  { name = "#illumos"; chatnet = "Freenode"; autojoin = "No"; },
  { name = "#kde-in"; chatnet = "Freenode"; autojoin = "Yes"; },
  { name = "#osdyson"; chatnet = "Freenode"; autojoin = "Yes"; },
  { name = "#hasgeek"; chatnet = "Freenode"; autojoin = "Yes"; },
  { name = "#falcon"; chatnet = "Freenode"; autojoin = "Yes"; }
);

aliases = {
  J = "join";
  LEAVE = "part";
  BYE = "quit";
  LAST = "lastlog";
  IG = "ignore";
  WC = "window close";
  RUN = "SCRIPT LOAD";
  CALC = "exec - if command -v bc >/dev/null 2>&1\\; then printf '%s=' '$*'\\; echo '$*' | bc -l\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level none;set autoclose_windows off;set reuse_unused_windows on;save";
  EXEMPTLIST = "mode $C +e";
  ATAG = "WINDOW SERVER";
  UNSET = "set -clear";
  RESET = "set -default";
  "hidelevels.set" = "set activity_hide_level parts joins quits nicks modes";
};

statusbar = {

  items = {
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    window = "{sb $winref:$tag/$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " This is Irssi v$J ";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_0 = {
      items = {
        barstart = { priority = "100"; };
        awl_0 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_1 = {
      items = {
        barstart = { priority = "100"; };
        awl_1 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};
settings = {
  core = {
    real_name = "Kartik Mistry";
    user_name = "kartik_";
    nick = "kart_";
  };
  "fe-text" = { actlist_sort = "refnum"; scroll_page_count = "/2"; };
  "fe-common/core" = {
    AUTOLOG = "yes";
    autolog_path = "~/.irssi/irclogs/%Y/$tag/$0.%m-%d.log";
    autolog_level = "ALL -CRAP -CLIENTCRAP -CTCPS";
    autolog_ignore_targets = "Chanserv Nickserv auth av and` av_ and`_";
    theme = "brisbin";
  };
  "perl/core/scripts" = {
    awl_display_key = "= $N$H$C$S";
    awl_display_nokey = "= $N$H$C$S";
    nicklist_width = "10";
    nicklist_automode = "screen";
    nicklist_height = "30";
  };
};
keyboard = ( 
  { key = "meta-[M"; id = "command"; data = "mouse_xterm "; }
);
logs = { };
windows = { 1 = { immortal = "yes"; name = "(status)"; level = "ALL"; }; };
mainwindows = { 1 = { first_line = "1"; lines = "33"; }; };
ignores = ( { mask = "on"; level = "INVITES"; } );
